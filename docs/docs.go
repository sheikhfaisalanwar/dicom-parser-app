// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/create": {
            "post": {
                "description": "Uploads a new Dicom Document to the server and creates a record in the database",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "create"
                ],
                "summary": "Create a new Dicom Document",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Dicom file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/client.CreateDicomDocumentResponse"
                        }
                    },
                    "400": {
                        "description": "No file found in form",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error uploading dicom document",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/dicom_data/{id}/image": {
            "get": {
                "description": "Retrieves the image of a Dicom Document by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "get"
                ],
                "summary": "Get Dicom Document image by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dicom Document ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "No document ID provided",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to generate image from document",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/dicom_data/{id}/tag": {
            "get": {
                "description": "Retrieves the data of a Dicom Header Attribute by its ID and a DICOM tag",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "get"
                ],
                "summary": "Get Dicom Document data by ID and Tag",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dicom Document ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "DICOM Tag",
                        "name": "tag",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error getting dicom document",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/dicom_data/{id}/tag-name": {
            "get": {
                "description": "Retrieves the data of a Dicom Header Attribute by its ID and a DICOM tag name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "get"
                ],
                "summary": "Get Dicom Document data by ID and Tag Name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dicom Document ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "DICOM Tag Name",
                        "name": "tagName",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error getting dicom document",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/dicom_data/{id}/tags": {
            "get": {
                "description": "Retrieves the tags of a Dicom Document by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "get"
                ],
                "summary": "Get All Dicom Document tags by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dicom Document ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/client.GetDocumentTagsResponse"
                        }
                    },
                    "400": {
                        "description": "No document ID provided",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error getting dicom document",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/get/all": {
            "get": {
                "description": "Retrieves all Dicom Documents",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "get"
                ],
                "summary": "Get all Dicom Documents",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/client.GetDicomDocumentResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Error getting dicom documents",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/get/{id}": {
            "get": {
                "description": "Retrieves a Dicom Document by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "get"
                ],
                "summary": "Get a Dicom Document by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dicom Document ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/client.GetDicomDocumentResponse"
                        }
                    },
                    "400": {
                        "description": "No file name provided",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error getting dicom document",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/get/{id}/data": {
            "get": {
                "description": "Retrieves the data of a Dicom Document by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "get"
                ],
                "summary": "Get Dicom Document data by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dicom Document ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/client.GetDocumentDataResponse"
                        }
                    },
                    "400": {
                        "description": "No file name provided",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error getting dicom document",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/get/{id}/tag": {
            "get": {
                "description": "Retrieves the data of a Dicom Document by its ID and a DICOM tag",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "get"
                ],
                "summary": "Get Dicom Document data by ID and Tag",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dicom Document ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "DICOM Group",
                        "name": "group",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "DICOM Element",
                        "name": "element",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/client.GetDicomDocumentDataByIDandTagResponse"
                        }
                    },
                    "400": {
                        "description": "Could not parse group and element from request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error getting dicom document",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "client.CreateDicomDocumentResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "client.GetDicomDocumentDataByIDandTagResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "client.GetDicomDocumentResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "client.GetDocumentDataResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "client.GetDocumentTagsResponse": {
            "type": "object",
            "properties": {
                "document_id": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
